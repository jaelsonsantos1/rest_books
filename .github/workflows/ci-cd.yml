name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
      
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Instalar dependências
        run: npm install
      
      - name: Rodar testes
        run: npm test

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
      
      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Construir e enviar imagem Docker
        run: |
          IMAGE_NAME=meuusuario/minha-api
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Conectar e atualizar servidor
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull meuusuario/minha-api:$(git rev-parse --short HEAD)
            docker stop minha-api || true
            docker rm minha-api || true
            docker run -d --name minha-api -p 3000:3000 meuusuario/minha-api:$(git rev-parse --short HEAD)
